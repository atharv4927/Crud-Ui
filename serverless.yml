service: crud-ui
frameworkVersion: "3"
provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "ap-south-1"}
  stackTags:
    REPOSITORY: "crud-ui"
  logs:
    restApi: true
  apiGateway:
    apiKeys:
      -myapikey
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
        - "s3:PutBucketPublicAccessBlock"
        - "s3:DeletePublicAccessBlock"
        - "s3:PutObject"
        - "s3:PutObjectAcl"
        - "s3:PutObjectTagging"
        - "cloudformation:*"
      Resource: "*"

resources:
  Resources:
    OriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Sub Crud UI assets in S3
    WebAppS3Bucket:
         Type: AWS::S3::Bucket
         Properties:
           BucketName: ${self:service}-${self:provider.stage}-${self:service}
           AccessControl: PublicRead
           WebsiteConfiguration:
             IndexDocument: index.html
             ErrorDocument: index.html
           PublicAccessBlockConfiguration:
               BlockPublicAcls: FALSE
               BlockPublicPolicy: FALSE
               IgnorePublicAcls: FALSE
               RestrictPublicBuckets: FALSE

  extensions:
    WebAppS3BucketPolicy:
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Join
                - ""
                - - !GetAtt WebAppS3Bucket.Arn
                  - "/*"
              Principal:
                CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
                AWS: "*"
    ApiDistribution:
      Properties:
        DistributionConfig:
          Origins:
            - Id: WebApp
              DomainName: !GetAtt WebAppS3Bucket.DomainName
              S3OriginConfig:
                OriginAccessIdentity: !Join
                  - /
                  - - origin-access-identity
                    - cloudfront
                    - !Ref OriginAccessIdentity
          Enabled: true
          HttpVersion: http2
          Comment: Serverless Managed ${self:provider.stage}-${self:service}
          PriceClass: PriceClass_All
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: false
            TargetOriginId: WebApp
            ForwardedValues:
              QueryString: "false"
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
plugins:
  - fullstack-serverless
custom:
  fullstack:
    bucketName: ${self:service}
    distributionFolder: /dist/crud-ui
    indexDocument: index.html
    errorDocument: index.html
    compressWebContent: true
    clientCommand: npm run build
    clientSrcPath: ./
    noConfirm: true
    invalidationPaths: /*
    spa:
      errorConfigurations:
        - errorCode: 404
          responseCode: 200
          responsePagePath: /index.html

package:
  individually: true

  exclude:
    - node_modules/**
    - venv/**
    - tsconfig.spec.json
    - tsconfig.json
    - README.md
    - create_project.txt
    - angular.json
    - package-lock.json
    - package.json
